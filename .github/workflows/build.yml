name: Build WASM
on:
  push:
    branches:
      - main

jobs:
  prepare-deps:
    name: Prepare Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.value }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Generate cache key
        id: cache-key
        run: |
          echo "value=nix-${{ hashFiles('flake.lock') }}-${{ hashFiles('package.yaml', 'stack.yaml') }}" >> $GITHUB_OUTPUT

      - name: Cache Nix store
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/nix
            /nix
          key: ${{ runner.os }}-${{ steps.cache-key.outputs.value }}
          restore-keys: |
            ${{ runner.os }}-nix-

      - name: Pre-build GHC-wasm shell
        run: |
          export NIX_STORE_DIR=/nix/store
          export NIX_STATE_DIR=/nix/var/nix
          nix build .#devShells.default --no-link

  build:
    name: Build WASM
    runs-on: ubuntu-latest
    needs: prepare-deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Restore Nix cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/nix
            /nix
          key: ${{ runner.os }}-${{ needs.prepare-deps.outputs.cache-key }}

      - name: Cache Cabal store
        uses: actions/cache@v4
        with:
          path: |
            ~/.cabal/store
            ~/.cabal/packages
            ~/.cabal/logs
          key: ${{ runner.os }}-cabal-${{ hashFiles('package.yaml', 'stack.yaml') }}-${{ hashFiles('flake.lock') }}
          restore-keys: |
            ${{ runner.os }}-cabal-${{ hashFiles('package.yaml', 'stack.yaml') }}-
            ${{ runner.os }}-cabal-

      - name: Build with cached dependencies
        working-directory: .
        run: |
          export NIX_STORE_DIR=/nix/store
          export NIX_STATE_DIR=/nix/var/nix
          
          nix develop --command bash -c "
            wasm32-wasi-cabal update
            wasm32-wasi-cabal build --dependencies-only
            wasm32-wasi-cabal build
          "

      - name: Prepare WASM binary
        run: |
          mkdir -p dist
          cp ./dist-newstyle/build/wasm32-wasi/ghc-*/type-inference-zoo-0.1.0.0/x/type-inference-zoo-exe/build/type-inference-zoo-exe/type-inference-zoo-exe.wasm dist/bin.wasm

      - name: Upload Artifact for GitHub Pages
        uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: dist
          destination-dir: ./
